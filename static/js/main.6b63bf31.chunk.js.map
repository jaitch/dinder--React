{"version":3,"sources":["pan-icon-3.png","components/RecipeSearch.js","components/RecipeList.js","components/NetworkGraph.js","components/DataViz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RecipeSearch","props","ings","listItems","map","ing","key","className","type","value","onClick","recipeSearchCallback","onClickClearCallback","RecipeList","recipe_array","list","r","length","toast","recipe_list","rec","href","target","rel","NetworkGraph","onRecipeSearch","console","log","state","recipeSearchIngredients","params","myAxios","axios","create","paramsSerializer","qs","stringify","arrayFormat","get","url","then","response","data","setState","recFound","displayRecipes","catch","errors","error","title","onRecipeClear","this","drawGraph","d3","remove","ing_data","nodes","source_id","source_name","target_id","strength","links","svg","width","attr","height","simulation","force","group","refs","group2","node","selectAll","enter","append","d","style","on","transition","duration","findNewSimilaritiesCallback","textElements","text","name","existing_ings","includes","new_list","concat","link","x","y","source","link_force","id","ref","Component","DataViz","notify","onInputChange","event","soughtIngredient_name","toLowerCase","onSubmit","preventDefault","graphData","ing_found","findNewSimilarities","ingredient","graph_data","htmlFor","placeholder","onfocus","onChange","soughtIngredient","App","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b63bf31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pan-icon-3.5d80a88a.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './RecipeSearch.css'\n\nfunction RecipeSearch(props) {\n\n  const ings = props.ings\n  if (ings !== []) {\n    const listItems = ings.map((ing) =>\n      <li key={ing[\"id\"]}>{ing[\"name\"]}</li>);\n\n    return(\n      <div className='recipe-search-box'>\n        <h3 className='instructions'>To matchmake another ingredient, click on the circle.</h3>\n        <h3>To add an ingredient to the recipe search, click on the name.</h3>\n        <ul className='list'>\n          {listItems}\n        </ul>\n        <div>\n          <input\n            type=\"submit\"\n            value=\"Search\"\n            onClick={props.recipeSearchCallback()}\n            className=\"recipe-submit-btn\"\n          />\n          <input\n            type=\"submit\"\n            value=\"Clear\"\n            onClick={() => props.onClickClearCallback()}\n            className=\"recipe-clear-btn\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nRecipeSearch.propTypes = {\n  ings: PropTypes.array,\n  recipeSearchCallback: PropTypes.func,\n  onClickClearCallback: PropTypes.func\n}\n\nexport default RecipeSearch","import React from 'react';\nimport {toast, ToastContainer} from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport './RecipeList.css'\n\nfunction RecipeList(props) {\n  const no_recs = () => {\n    toast(\"Sorry! No recipes found for that combination.\")\n  };\n  const list = props.list\n  const recipe_array = list[\"rec_data\"].map(r => r[\"allData\"])\n  if (recipe_array.length === 0) {\n    no_recs();\n    return (\n      <div>\n        <ToastContainer/>\n      </div>\n    )\n  }\n  else {\n    const recipe_list = recipe_array.map((rec) =>\n      <li key={rec[\"_id\"]}>\n        <a href={rec['url']} target=\"_blank\" rel=\"noopener noreferrer\"> {rec[\"name\"]} </a>\n      </li>);\n\n  return (\n    <div>\n      <h3 className='recipe-list-header'>RECIPES</h3>\n      <ul className='recipe-list'>{recipe_list}</ul>\n    </div>\n  )}\n}\n\nRecipeList.propTypes = {\n  list: PropTypes.Array\n}\n\nexport default RecipeList","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport './NetworkGraph.css';\nimport axios from 'axios';\nimport qs from 'qs';\nimport RecipeSearch from './RecipeSearch'\nimport RecipeList from './RecipeList'\n\n\nclass NetworkGraph extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipeSearchIngredients: [],\n      recFound: [],\n      displayRecipes: false,\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.data['ing_data']===[]) {\n      return\n    }\n    this.drawGraph(this.props.data);\n  }\n\n  componentDidUpdate() {\n    if (this.props.data['ing_data']===[]) {\n      return\n    }\n    d3.selectAll('g > *').remove()\n    this.drawGraph(this.props.data);\n  }\n\n  drawGraph(data) {\n    const { ing_data } = data\n    console.log(ing_data[0]);\n    const nodes = [{\"id\": ing_data[0].source_id, \"name\": ing_data[0].source_name, \"strength\": 1}, ...ing_data.map(r => {\n      return {\n        \"id\": r.target_id,\n        \"name\": r.target,\n        \"strength\": r.strength\n      }})];\n    const links = ing_data.map(r => {\n      return {\n        \"source\": r.source_id,\n        \"target\": r.target_id,\n        \"strength\": r.strength\n      }});\n\n    const svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\")\n    // const padding = \"5\";\n\n    const simulation = d3.forceSimulation()\n    .nodes(nodes);\n\n    simulation\n      .force(\"charge_force\", d3.forceManyBody().strength(-2000))\n      .force(\"center_force\", d3.forceCenter(width / 2, height / 2))\n\n    const group = d3.select(this.refs.links)\n    const group2 = d3.select(this.refs.nodes)\n\n    const node = group2\n      .attr(\"class\", \"nodes\")\n      .selectAll(\"circle\")\n      .data(nodes)\n      .enter()\n      .append(\"circle\")\n      // .attr(\"width\", width - padding )\n      // .attr(\"height\", height - padding)\n      .attr(\"r\", circleSize)\n      .attr(\"fill\", circleColor)\n      .style(\"stroke\", 'black')\n      .on('mouseover', function(d) {\n        if(d !== nodes[0]){\n          d3.select(this)\n            .transition()\n            .attr('fill', '#fd267d');\n        }\n      })\n      .on('mouseout', function(d) {\n        if(d !== nodes[0]){\n          d3.select(this)\n            .transition()\n            .duration(100)\n            .attr('fill', '#ff7854');\n        }\n      })\n      .on('click', (d)  => {\n        console.log(d[\"name\"])\n        this.props.findNewSimilaritiesCallback(d[\"name\"]);\n      })\n\n\n    const textElements = group2\n      .selectAll('text')\n      .data(nodes)\n      .enter().append('text')\n        .text(node => node.name)\n        .attr('font-size', 20)\n        .attr('dx', 15)\n        .attr('dy', 4)\n        .on('mouseover', function(d) {\n          d3.select(this)\n            .transition()\n            .attr('font-size', 25)\n            .attr('font-weight', 'bold');\n        })\n        .on('mouseout', function(d) {\n          d3.select(this)\n            .transition()\n            .duration(100)\n            .attr('font-size', 20)\n            .attr('font-weight', 'normal');\n        })\n        .on('click', (d)  => {\n          let existing_ings = this.state.recipeSearchIngredients\n          if (existing_ings.length > 0) {\n            let just_ids = existing_ings.map( ing => ing[\"id\"] )\n            if (just_ids.includes(d[\"id\"])===false){\n              let new_list = existing_ings.concat(d)\n              this.setState({\n                recipeSearchIngredients: new_list\n              })\n            }\n            else return\n          }\n          else\n          {let new_list = existing_ings.concat(d)\n            this.setState({\n              recipeSearchIngredients: new_list\n            })}\n        })\n\n    const link = group\n      .attr(\"class\", \"links\")\n    .selectAll(\"line\")\n    .data(links)\n    .enter().append(\"line\")\n      .attr(\"stroke-width\", 1.5)\n      .style(\"opacity\", .6)\n\n    simulation.on(\"tick\", tickActions );\n\n    const link_force =  d3.forceLink(links)\n      .id(function(d) { return d.id; })\n\n    simulation.force(\"links\",link_force)\n\n    function circleColor(d){\n      if(d === nodes[0]) {\n        return \"#fd267d\";\n      } else {\n        return \"#ff7854\";\n      }\n    }\n\n    function circleSize(d){\n      if (d.strength === 1) {\n        return 45\n      }\n      return 400 * d.strength\n    }\n\n    function tickActions() {\n      node\n        .attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n      textElements\n        .attr(\"x\", node => node.x)\n        .attr(\"y\", node => node.y);\n      link\n        .attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n    }\n  }\n\n  onRecipeSearch = () => {\n    console.log(`before params ${this.state.recipeSearchIngredients}`)\n    const ing_ids = this.state.recipeSearchIngredients.map((ing) => ing[\"id\"])\n    const params = { ing: ing_ids}\n    const myAxios = axios.create({\n      paramsSerializer: params => qs.stringify(params, {arrayFormat: 'repeat'})\n    })\n    console.log(`these are the params ${params}`)\n    myAxios.get(`${this.props.url}/recipes/`,{params})\n      .then((response) => {\n        console.log(response.data)\n        if (response.data !== []) {\n          this.setState({\n            recFound: response.data,\n            displayRecipes: true\n          });\n        }\n      })\n      .catch((errors) => {\n        this.setState({\n          error: errors.title,\n        });\n        console.log(`errors: ${errors}`)\n      });\n  }\n\n  onRecipeClear = () => {\n    this.setState({\n      recipeSearchIngredients: [],\n      displayRecipes: false\n    })\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <svg width=\"1100\" height=\"900\" className='graph'>\n          <g ref=\"links\"/>\n          <g ref=\"nodes\"/>\n        </svg>\n        <div className='Recipe-search'>\n          <RecipeSearch\n            ings={this.state.recipeSearchIngredients}\n            recipeSearchCallback={this.onRecipeSearch}\n            onClickClearCallback={this.onRecipeClear}\n          />\n        </div>\n          <div>\n          { (this.state.displayRecipes === true)\n          &&\n          <RecipeList list={this.state.recFound}/>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\n\nNetworkGraph.propTypes = {\n  findNewSimilaritiesCallback: PropTypes.func.isRequired,\n}\nexport default NetworkGraph;\n\n// based on source: https://tomroth.com.au/fdg-basics/","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport NetworkGraph from './NetworkGraph'\nimport './DataViz.css'\n\n\nclass DataViz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      soughtIngredient_name: '',\n      graph_data: [],\n      ing_found: false,\n      error: '',\n    }\n  }\n\n  notify = () => toast(\"Sorry! Ingredient not found.\");\n\n  componentDidMount() {\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      soughtIngredient_name: event.target.value.toLowerCase(),\n    });\n    console.log(`updated! looking for: ${this.state.soughtIngredient_name}`)\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    axios.get(`${this.props.url}/ingredient/${this.state.soughtIngredient_name}`)\n      .then((response) => {\n        console.log(response.data)\n        // format for calling single ingredient: response.data.ing_data[0]\n        if (response.data.ing_data.length > 0) {\n          this.setState({\n            graphData: response.data,\n            ing_found: true,\n            soughtIngredient_name: '',\n          });\n        }\n        else {\n          this.notify()\n        }\n      })\n      .catch((errors) => {\n        this.setState({\n          ing_found: false,\n          error: errors.title,\n        });\n        console.log(`errors: ${errors}`)\n      });\n      // If I have time: display 'No Search Results' message\n  }\n\n  findNewSimilarities = (ingredient) => {\n    axios.get(`${this.props.url}/ingredient/${ingredient}`)\n    .then((response) => {\n      console.log(response.data)\n      this.setState({\n        graphData: response.data,\n        ing_found: true,\n        soughtIngredient_name: '',\n      });\n    })\n    .catch((errors) => {\n      this.setState({\n        ing_found: false,\n        error: errors.title\n      });\n      console.log(`errors: ${errors}`)\n    });\n  }\n\n\n\n  render() {\n\n    return (\n      <div>\n        <form className=\"form\" onSubmit={this.onSubmit}>\n          <div className=\"search-area\">\n            <label className=\"text\" htmlFor=\"text\">What's Cookin'?</label>\n          </div>\n          <div className=\"search-box\">\n            <input\n              type=\"text\"\n              placeholder=\"ingredient (singular)\"\n              onfocus={this.placeholder}\n              name=\"ingredient\"\n              onChange={this.onInputChange}\n              value={this.state.soughtIngredient}\n            />\n          </div>\n          <div>\n            <input\n              type=\"submit\"\n              value=\"Search\"\n              onClick={this.onSubmit}\n              className=\"submit-btn\"\n            />\n          </div>\n        </form>\n      <div>\n        {(this.state.ing_found === true) &&\n        <NetworkGraph data={this.state.graphData} findNewSimilaritiesCallback={this.findNewSimilarities} url={this.props.url}/>\n        }\n      </div>\n      <ToastContainer/>\n    </div>\n    )\n  }\n}\n\nDataViz.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n\nexport default DataViz;","import React, { Component } from 'react';\nimport logo from './pan-icon-3.png';\nimport DataViz from './components/DataViz';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n    }\n  }\n\n  render() {\n    const BASE_URL = 'http://localhost:5000'\n    // const BASE_URL = 'https://dinder-flask.herokuapp.com/'\n\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <img src={logo} className='App-logo' alt=\"logo\"/>\n          <h1 className='App-title'>dinder</h1>\n          <p className='App-subtitle'>The Ingredient Matchmaker</p>\n        </header>\n        <main className='App-body'>\n          <DataViz url={BASE_URL}/>\n        </main>\n        <footer>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}