{"version":3,"sources":["pan-icon-3.png","components/NetworkGraph.js","components/DataViz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NetworkGraph","this","props","data","ing_data","drawGraph","console","log","nodes","source_id","source_name","map","r","target_id","target","strength","links","svg","d3","width","attr","height","simulation","force","group","refs","group2","node","selectAll","enter","append","d","style","on","transition","duration","remove","findNewSimilaritiesCallback","textElements","text","name","link","x","y","source","link_force","id","ref","Component","DataViz","onInputChange","event","setState","soughtIngredient_name","value","state","onSubmit","preventDefault","axios","get","url","then","response","graphData","ing_found","catch","errors","error","title","findNewSimilarities","ingredient","graph_data","className","htmlFor","type","placeholder","onChange","soughtIngredient","onClick","App","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da8c63eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pan-icon-3.5d80a88a.png\";","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport './NetworkGraph.css';\n\n\nclass NetworkGraph extends Component {\n\n  componentDidMount() {\n    if (!this.props.data.ing_data) {\n      return\n    }\n    this.drawGraph(this.props.data);\n  }\n\n  componentDidUpdate() {\n    if (!this.props.data.ing_data) {\n      return\n    }\n    this.drawGraph(this.props.data);\n  }\n\n  drawGraph(data) {\n    if (!data.ing_data) {\n      return\n    }\n    const { ing_data } = data\n    console.log(ing_data[0]);\n    const nodes = [{\"id\": ing_data[0].source_id, \"name\": ing_data[0].source_name, \"strength\": 1}, ...ing_data.map(r => {\n      return {\n        \"id\": r.target_id,\n        \"name\": r.target,\n        \"strength\": r.strength\n      }})];\n    const links = ing_data.map(r => {\n      return {\n        \"source\": r.source_id,\n        \"target\": r.target_id,\n        \"strength\": r.strength\n      }});\n\n    const svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\")\n    // const padding = \"5\";\n\n    const simulation = d3.forceSimulation()\n    .nodes(nodes);\n\n    simulation\n      .force(\"charge_force\", d3.forceManyBody().strength(-2500))\n      .force(\"center_force\", d3.forceCenter(width / 2, height / 2))\n\n    const group = d3.select(this.refs.links)\n    const group2 = d3.select(this.refs.nodes)\n\n    const node = group2\n      .attr(\"class\", \"nodes\")\n      .selectAll(\"circle\")\n      .data(nodes)\n      .enter()\n      .append(\"circle\")\n      // .attr(\"width\", width - padding )\n      // .attr(\"height\", height - padding)\n      .attr(\"r\", circleSize)\n      .attr(\"fill\", circleColor)\n      .style(\"opacity\", circleOpacity)\n      .style(\"stroke\", 'black')\n      .on('mouseover', function(d) {\n        if(d !== nodes[0]){\n          d3.select(this)\n            .transition()\n            .attr('fill', '#fd267d');\n        }\n      })\n      .on('mouseout', function(d) {\n        if(d !== nodes[0]){\n          d3.select(this)\n            .transition()\n            .duration(100)\n            .attr('fill', '#ff7854');\n        }\n      })\n      .on('click', (d)  => {\n        console.log(d[\"name\"])\n        d3.selectAll('g > *').remove()\n        this.props.findNewSimilaritiesCallback(d[\"name\"]);\n      })\n\n\n    const textElements = group2\n      .selectAll('text')\n      .data(nodes)\n      .enter().append('text')\n        .text(node => node.name)\n        .attr('font-size', 20)\n        .attr('dx', 15)\n        .attr('dy', 4)\n\n    const link = group\n      .attr(\"class\", \"links\")\n    .selectAll(\"line\")\n    .data(links)\n    .enter().append(\"line\")\n      .attr(\"stroke-width\", 1.5)\n      .style(\"opacity\", .6)\n\n    simulation.on(\"tick\", tickActions );\n\n    const link_force =  d3.forceLink(links)\n      .id(function(d) { return d.id; })\n\n    simulation.force(\"links\",link_force)\n\n    function circleColor(d){\n      if(d === nodes[0]) {\n        return \"#fd267d\";\n      } else {\n        return \"#ff7854\";\n      }\n    }\n\n    function circleOpacity(d){\n\n    }\n\n    function circleSize(d){\n      if (d.strength === 1) {\n        return 50\n      }\n      return 450 * d.strength\n    }\n\n    function tickActions() {\n      node\n        .attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n      textElements\n        .attr(\"x\", node => node.x)\n        .attr(\"y\", node => node.y);\n      link\n        .attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n    }\n  }\n\n\n  render() {\n    return (\n      <svg width=\"1100\" height=\"900\">\n        <g ref=\"links\"/>\n        <g ref=\"nodes\"/>\n      </svg>\n    );\n  }\n}\n\n\nNetworkGraph.propTypes = {\n  findNewSimilaritiesCallback: PropTypes.func.isRequired,\n}\nexport default NetworkGraph;\n\n// based on source: https://tomroth.com.au/fdg-basics/","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport NetworkGraph from './NetworkGraph'\nimport './DataViz.css'\n\n\nclass DataViz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      soughtIngredient_name: '',\n      graph_data: [],\n      ing_found: false,\n      error: '',\n    }\n  }\n\n  componentDidMount() {\n    // axios.get(`${this.props.url}/json/nodes.json`)\n    // .then((response) => {\n    //   this.setState({nodes_data: response.data });\n    //   console.log(this.state.nodes_data)\n    // })\n    // .catch((error) => {\n    //   this.setState({ error: error });\n    //   console.log(error)\n    // });\n\n    // axios.get(`${this.props.url}/json/links.json`)\n    // .then((response) => {\n    //   this.setState({links_data: response.data });\n    //   console.log(this.state.links_data)\n    // })\n    // .catch((error) => {\n    //   this.setState({ error: error });\n    //   console.log(error)\n    // })\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      soughtIngredient_name: event.target.value,\n    });\n    console.log(`updated! looking for: ${this.state.soughtIngredient_name}`)\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    axios.get(`${this.props.url}/ingredient/${this.state.soughtIngredient_name}`)\n      .then((response) => {\n        console.log(response.data)\n        // format for calling single ingredient: response.data.ing_data[0]\n        this.setState({\n          graphData: response.data,\n          ing_found: true,\n          soughtIngredient_name: '',\n        });\n      })\n      .catch((errors) => {\n        this.setState({\n          ing_found: false,\n          error: errors.title,\n        });\n        console.log(`errors: ${errors}`)\n      });\n      // If I have time: use Feedback to display 'No Search Results' message\n  }\n\n  findNewSimilarities = (ingredient) => {\n    axios.get(`${this.props.url}/ingredient/${ingredient}`)\n    .then((response) => {\n      console.log(response.data)\n      this.setState({\n        graphData: response.data,\n        ing_found: true,\n        soughtIngredient_name: '',\n      });\n    })\n    .catch((errors) => {\n      this.setState({\n        ing_found: false,\n        error: errors.title,\n      });\n      console.log(`errors: ${errors}`)\n    });\n  }\n\n\n\n  render() {\n\n    return (\n      <div>\n        <form className=\"form\" onSubmit={this.onSubmit}>\n          <div className=\"search-area\">\n            <label className=\"text\" htmlFor=\"text\">What's Cookin'?</label>\n          </div>\n          <div className=\"search-box\">\n            <input\n              type=\"text\"\n              placeholder=\"ingredient (singular)\"\n              name=\"ingredient\"\n              onChange={this.onInputChange}\n              value={this.state.soughtIngredient}>\n            </input>\n          </div>\n\n          <div>\n            <input\n              type=\"submit\"\n              value=\"Search\"\n              onClick={this.onSubmit} className=\"submit-btn\"/>\n          </div>\n        </form>\n      <div>\n        {this.state.ing_found === true &&\n        <NetworkGraph data={this.state.graphData} findNewSimilaritiesCallback={this.findNewSimilarities}/>\n        }\n      </div>\n    </div>\n    )\n  }\n}\n\nDataViz.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n\nexport default DataViz;","import React, { Component } from 'react';\nimport logo from './pan-icon-3.png';\nimport DataViz from './components/DataViz';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n    }\n  }\n\n  render() {\n    const BASE_URL = 'http://localhost:5000'\n\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <img src={logo} className='App-logo' alt=\"logo\"/>\n          <h1 className='App-title'>dinder</h1>\n          <p className='App-subtitle'>The Ingredient Matchmaker</p>\n        </header>\n        <main className='App-body'>\n          <DataViz url={BASE_URL}/>\n        </main>\n        <footer>\n\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}